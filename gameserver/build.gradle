apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'antlr'

apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    generated {
        java {
            srcDir 'src/generated/java'
        }
    }
}

jar {
    baseName = 'gameserver'
    version = "${version}"
}

repositories {
    mavenCentral()
}

dependencies {
    antlr('org.antlr:antlr4:+')

    compile project(":common")
    // Spring
    //compile('org.springframework.boot:spring-boot-starter-actuator')
    //compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile("org.springframework.integration:spring-integration-java-dsl:${springJavaDslVersion}")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    //compile('org.springframework.boot:spring-boot-starter-mail')
    //compile('org.springframework.boot:spring-boot-starter-remote-shell')
    //compile('org.springframework.boot:spring-boot-starter-validation')

    compile('org.springframework.boot:spring-boot-starter-artemis')
    compile("org.apache.commons:commons-math3:${apacheMathVersion}")

    runtime('org.hsqldb:hsqldb')
    runtime('mysql:mysql-connector-java')

    optional("org.springframework.boot:spring-boot-configuration-processor")
}

dependencies {
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testRuntime('org.hsqldb:hsqldb')
}

compileJava.dependsOn(processResources)

task copyGeneratedParser(type: Copy) {
	//delete fileTree(dir: "src/generated/java/")
	into('src/generated/java/')
	from("${buildDir}/generated-src/antlr/main")
}

generateGrammarSource {
    arguments += ["-lib", "src/main/antlr/ru/jts_dev/gameserver/parser"]
    arguments += ["-package", "ru.jts_dev.gameserver.parser"]
}

generateGrammarSource.finalizedBy copyGeneratedParser

test.enabled = false

clean {
    delete fileTree(dir: "src/generated/java/")
}
